install.packages("tidyverse")
pw
pwd
pwd()
3+5
4^3
3+5
4^3
c(2,3,4,5)
c(2,3,4,5)    # C stands for "combine" or "concatenate" or "list"
c(2,3,4,5) + c(1,4,2,3)
c(2,3,4)*2
c(2,3,4)^3
c(3,4,5) + 2
3+5
source('~/Desktop/School/STAT6430/R Code/Day 1/day01.R')
3+5
4^3
c(2,3,4,5)    # C stands for "combine" or "concatenate" or "list"
c(2,3,4,5) + c(1,4,2,3)
c(2,3,4)*2
c(2,3,4)^3
c(2,3,4)^3
c(3,4,5) + 2
c(2,3,4,5) + c(5,10)
c(2,3,4,5,6) + c(1,2)
c(1,2,5)^c(2,2,3)
c(1,2,5)^c(2,3)
c(1,2,5,4)^c(2,3)
1:10
3:15
12:2
seq(1,11,by=2)
seq(4,30, by=3)
rep(7,20)
c(1:10)
x <- 7   # You can also use "x = 7" if you prefer
y <- -2
z <- c(3,7,8,9,9,2,x)
z
unique(z) # Eliminate duplicates
sort(unique(z)) # In order!
mean(z)
median(z)
max(z)
x <- 5
z
v <- 10:20
v
v[2]
v[4:7]
v[-5]
v[9:7]
v[c(2,6,8)]
v[(2,6,8)]
v <- 10:20
v
v[2]
v[4:7]
v[-5]
4:7
v[:-5]
v[:-1]
v[-5]
v[9:7]
(1:11) %% 2
(1:11) %% 2 == 1  # True when element odd
v[(1:11) %% 2 == 1]   # Extracts every other entry of v
v[v %% 2 == 1]   # Extracts the odd entries of v
(1:11)[v %% 2 == 1]  # Positions of odd entries of v
courses <- c("STAT6021", "CS5012", "DS6001", "STAT5170","MATH5100")
daysofweek <- c("MWF", "MW", "TuTh", "MWF", "MWF")
starttime <- c(1000, 1400, 1530, 1200, 1300)
endtime <- c(1050, 1515, 1645, 1250, 1350)
classes <- data.frame(courses,daysofweek,starttime,endtime)
classes
classes$starttime
classes$endtime[3]
classes$starttime > 1000
classes$courses[classes$starttime > 1200]   # No morning classes!
classes$courses[classes$starttime >= 1300 & classes$daysofweek=="MWF"]
tail(MSDS_Index)
library(readr)
library(dplyr)
setwd("~/Desktop/School/SYS6018/HousePrices-SYS6018-Competition2")
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
train.data <- na.omit(Train.data)
train.data <- na.omit(train.data)
test.data <- na.omit(test.data)
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
View(test.data)
train.data$Alley = NULL
train.data <- na.omit(train.data)
summary(train.data)
apply(train.data,2,function(X) sum(is.na(X)))
is.na(X)
is.na(train.data$Id)
sum(is.na(train.data$Id))
train.data <- read_csv("Train.csv")
sum(is.na(train.data$Alley))
apply(train.data,2,function(X) sum(is.na(X)))
apply(train.data,2,function(X) sum(is.na(X))>1000)
badcols = apply(train.data,2,function(X) sum(is.na(X))>1000)
train.data[badcols,]
badcols
as.vector(badcols)
colnames(train.data)[as.vector(badcols)]
train.data[colnames(train.data)[as.vector(badcols)]]
train.data[!colnames(train.data)[as.vector(badcols)]]
train.data[!train.data[as.vector(badcols)]]
train.data[as.vector(badcols)]
train.data[as.vector(badcols)]
train.data[!as.vector(badcols)]
train.data = train.data[!as.vector(badcols)]
test.data = test.data[!as.vector(badcols)]
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
badcols = apply(train.data,2,function(X) sum(is.na(X))>1000)
train.data = train.data[!as.vector(badcols)]
test.data = test.data[!as.vector(badcols)]
train.data <- na.omit(train.data)
test.data <- na.omit(test.data)
test.data <-  read_csv("Test.csv")
train.data = train.data[!as.vector(badcols),]
!as.vector(badcols)
tail(badcols,-1)
as.vector(tail(badcols,-1))
test.data = test.data[!as.vector(tail(badcols,-1)),]
test.data <- na.omit(test.data)
test.data <-  read_csv("Test.csv")
test.data = test.data[!as.vector(tail(badcols,-1)),]
test.data = test.data[!as.vector(head(badcols,-1)),]
View(test.data)
as.vector(head(badcols,-1))
test.data = test.data[!as.vector(head(badcols,-1)),]
View(test.data)
test.data[!as.vector(head(badcols,-1)),]
!as.vector(head(badcols,-1))
test.data = test.data[!as.vector(head(badcols,-1))]
train.data = train.data[!as.vector(badcols)]
test.data = test.data[!as.vector(head(badcols,-1))]
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
badcols = apply(train.data,2,function(X) sum(is.na(X))>1000)
train.data = train.data[!as.vector(badcols)]
test.data = test.data[!as.vector(head(badcols,-1))]
train.data <- na.omit(train.data)
test.data <- na.omit(test.data)
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
View(test.data)
train.data[train.data$Alley = NULL]
train.data[train.data$Alley == NULL]
train.data[train.data$Alley == NULL,]
train.data[is.na(train.data$Alley),]
train.data$Alley[is.na(train.data$Alley),]
train.data[is.na(train.data$Alley),]
train.data[is.na(train.data$Alley),]$Alley
train.data[is.na(train.data$Alley),]$Alley = "No"
View(train.data)
test.data[is.na(test.data$Alley),]$Alley = "No"
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
train.data[is.na(train.data$Alley),]$Alley = "No Alley"
test.data[is.na(test.data$Alley),]$Alley = "No Alley"
View(train.data)
train.data[train.data$TotalBsmtSF == 0,]
train.data[train.data$TotalBsmtSF == 0,][c(1,2)]
train.data[train.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data$TotalBsmtSF == 0
test.data[test.data$TotalBsmtSF == 0,]
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data <-  read_csv("Test.csv")
test.data[is.na(test.data$Alley),]$Alley = "No Alley"
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
View(test.data)
test.data$TotalBsmtSF == 0
test.data[test.data$TotalBsmtSF == 0][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0,]
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)]
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
train.data[train.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
train.data[is.na(train.data$Alley),]$Alley = "No Alley"
test.data[is.na(test.data$Alley),]$Alley = "No Alley"
train.data[train.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0)
test.data[subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0),]
test.data[data.frame(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0)),]
test.data[as.data.frame(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0)),]
as.data.frame(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0)
as.data.frame(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))
as.data.frame(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))
subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))
subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0)
as.vector(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))
as.vector(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))
test.data[as.vector(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))]
test.data[as.vector(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0)),]
test.data[as.vector(subset(test.data, !is.na(TotalBsmtSF)&TotalBsmtSF == 0))]
test.data[test.data$TotalBsmtSF == 0 & !is.na(test.data$TotalBsmtSF),][c(31:34,36)] = "No Bsmt"
View(test.data)
sum(is.na(test.data$TotalBsmtSF))
train.data[is.na(train.data$FireplaceQu),]$FireplaceQu = "No Fireplace"
test.data[is.na(test.data$FireplaceQu),]$FireplaceQu = "No Fireplace"
library(readr)
library(dplyr)
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
#NA in the context of the alley variable means that
#there is no alley access, not that the data was missing
#so we replace NA with the word "No Alley"
train.data[is.na(train.data$Alley),]$Alley = "No Alley"
test.data[is.na(test.data$Alley),]$Alley = "No Alley"
#Same logic as for alley, but for BsmtQual, BsmtCond,
#BsmtExposure, BsmtFinType1, BsmtFinType2
train.data[train.data$TotalBsmtSF == 0,][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0 & !is.na(test.data$TotalBsmtSF),][c(31:34,36)] = "No Bsmt"
#Same logic as for above but for fireplace
train.data[train.data$Fireplaces == 0,]$FireplaceQu = "No Fireplace"
test.data[test.data$Fireplaces == 0,]$FireplaceQu = "No Fireplace"
train.data[train.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
test.data[test.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
train.data[train.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
test.data[test.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
train.data[train.data$GarageArea == 0 & !is.na(train.data$GarageArea),][c(59:61,64:65)] = "No Garage"
test.data[test.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
library(readr)
library(dplyr)
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
#NA in the context of the alley variable means that
#there is no alley access, not that the data was missing
#so we replace NA with the word "No Alley"
train.data[is.na(train.data$Alley),]$Alley = "No Alley"
test.data[is.na(test.data$Alley),]$Alley = "No Alley"
#Same logic as for alley, but for BsmtQual, BsmtCond,
#BsmtExposure, BsmtFinType1, BsmtFinType2
train.data[train.data$TotalBsmtSF == 0 & !is.na(train.data$TotalBsmtSF),][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0 & !is.na(test.data$TotalBsmtSF),][c(31:34,36)] = "No Bsmt"
#Same logic as for above but for fireplace
train.data[train.data$Fireplaces == 0,]$FireplaceQu = "No Fireplace"
test.data[test.data$Fireplaces == 0,]$FireplaceQu = "No Fireplace"
train.data[train.data$GarageArea == 0 & !is.na(train.data$GarageArea),][c(59:61,64:65)] = "No Garage"
test.data[test.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
train.data[train.data$PoolArea == 0 & !is.na(train.data$PoolArea),]$PoolQC = "No Pool"
test.data[test.data$PoolArea == 0 & !is.na(test.data$PoolArea),]$PoolQC = "No Pool"
train.data[is.na(train.data$Fence),]$Fence = "No Fence"
test.data[is.na(test.data$Fence),]$Fence = "No Fence"
train.data[train.data$MiscVal == 0 & !is.na(train.data$MiscVal),]$MiscFeature = "No Feature"
test.data[test.data$MiscVal == 0 & !is.na(test.data$MiscVal),]$MiscFeature = "No Feature"
sum(is.na(train.data))
sum(is.na(test.data))
train.data <- na.omit(train.data)
test.data <- na.omit(test.data)
train.data <- read_csv("Train.csv")
test.data <-  read_csv("Test.csv")
#NA in the context of the alley variable means that
#there is no alley access, not that the data was missing
#so we replace NA with the word "No Alley"
train.data[is.na(train.data$Alley),]$Alley = "No Alley"
test.data[is.na(test.data$Alley),]$Alley = "No Alley"
#Same logic as for alley, but for BsmtQual, BsmtCond,
#BsmtExposure, BsmtFinType1, BsmtFinType2
train.data[train.data$TotalBsmtSF == 0 & !is.na(train.data$TotalBsmtSF),][c(31:34,36)] = "No Bsmt"
test.data[test.data$TotalBsmtSF == 0 & !is.na(test.data$TotalBsmtSF),][c(31:34,36)] = "No Bsmt"
#Same logic as for above but for fireplace
train.data[train.data$Fireplaces == 0,]$FireplaceQu = "No Fireplace"
test.data[test.data$Fireplaces == 0,]$FireplaceQu = "No Fireplace"
#Same but for garage
train.data[train.data$GarageArea == 0 & !is.na(train.data$GarageArea),][c(59:61,64:65)] = "No Garage"
test.data[test.data$GarageArea == 0 & !is.na(test.data$GarageArea),][c(59:61,64:65)] = "No Garage"
#Same logic as for above but for Pool
train.data[train.data$PoolArea == 0 & !is.na(train.data$PoolArea),]$PoolQC = "No Pool"
test.data[test.data$PoolArea == 0 & !is.na(test.data$PoolArea),]$PoolQC = "No Pool"
#Again but for fence
train.data[is.na(train.data$Fence),]$Fence = "No Fence"
test.data[is.na(test.data$Fence),]$Fence = "No Fence"
#Again but for Miscellaneous Features
train.data[train.data$MiscVal == 0 & !is.na(train.data$MiscVal),]$MiscFeature = "No Feature"
test.data[test.data$MiscVal == 0 & !is.na(test.data$MiscVal),]$MiscFeature = "No Feature"
apply(train.data,2,function(X) sum(is.na(X))>1000)
apply(train.data,2,function(X) sum(is.na(X)))
apply(test.data,2,function(X) sum(is.na(X)))
